# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dSWASfY8Eak2AvKEsorXUx8p6LOp4SOj
"""

import numpy as np
import matplotlib.pyplot as plt

#x=size of the house in sqft and y=cost of thr house we have to predict the cost of the house.
def estimate_coefficiants(x,y):

  n=np.size(x)                            #number of observation points
  mean_x,mean_y=np.mean(x),np.mean(y)     # taking mean of x and y
  ss_xy=np.sum(y*x-n*mean_x*mean_y)           #Sum of square errors
  ss_xx=np.sum(x*x-n*mean_x*mean_x)
  b1=ss_xy/ss_xx                         # regression coefficient :value by which Regr.Line needs to be moved
  b0=mean_y-b1*mean_x
  return b0,b1

#plotting the regression line
def plot_regression_line(x,y,b):
  plt.scatter(x,y,color='m',marker='o')
  y_pred=b[0]+b[1]*x
  plt.plot(x,y_pred,color='g')
  plt.xlabel('Size')                 #labeling x cordinate
  plt.ylabel('Cost')                 #labeling y cordinate
  plt.show()                         # Showing the graph

x=np.array([1,2,3,4,5,6,7,8,9,10])                           #size of the house in sqrft
y=np.array([300,350,500,700,800,850,900,900,1000,1200])      #rate per square ft
b=estimate_coefficiants(x,y)
print("estimate_coefficiants b0={} and b1={}".format(b[0],b[1]))
plot_regression_line(x,y,b)

